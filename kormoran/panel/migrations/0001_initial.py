# Generated by Django 4.2 on 2023-05-08 13:12

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Match',
            fields=[
                ('match_id', models.AutoField(primary_key=True, serialize=False)),
                ('match_name', models.CharField(default='', max_length=100)),
                ('match_status', models.CharField(choices=[('completed', 'Completed'), ('pending', 'Pending'), ('during', 'During')], default='pending', max_length=10)),
                ('team_1_result', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('team_2_result', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
            ],
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('sport_id', models.AutoField(primary_key=True, serialize=False)),
                ('sport_name', models.CharField(max_length=100)),
                ('sport_gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Mix', 'Mix')], default='Mix', max_length=10)),
                ('points_win', models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('points_lost', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('points_draw', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('sport_slug', models.SlugField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_id', models.AutoField(primary_key=True, serialize=False)),
                ('team_name', models.CharField(max_length=100)),
                ('team_won', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('team_draw', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('team_lost', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('team_sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='panel.sport')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('tournament_id', models.AutoField(primary_key=True, serialize=False)),
                ('tournament_name', models.CharField(max_length=100, unique=True)),
                ('tournament_status', models.CharField(choices=[('completed', 'Completed'), ('pending', 'Pending'), ('during', 'During')], default='pending', max_length=10)),
                ('tournament_type', models.CharField(choices=[('1 Group', 'Group1'), ('2 Groups + Ladder', 'Group2'), ('3 Groups + Ladder', 'Group3'), ('4 Groups + Ladder', 'Group4'), ('Ladder', 'Ladder')], default='1 Group', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TournamentTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_won', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('team_lost', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('team_draw', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('team_points', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('points_scored', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200)])),
                ('points_lost', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200)])),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='panel.team')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='panel.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='TournamentMatchRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='panel.match')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='panel.tournament')),
            ],
        ),
        migrations.AddField(
            model_name='tournament',
            name='matches',
            field=models.ManyToManyField(through='panel.TournamentMatchRelation', to='panel.match'),
        ),
        migrations.AddField(
            model_name='tournament',
            name='tournament_sport',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='panel.sport'),
        ),
        migrations.CreateModel(
            name='TempTeam',
            fields=[
                ('temp_id', models.AutoField(primary_key=True, serialize=False)),
                ('temp_name', models.CharField(max_length=100)),
                ('temp_sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='panel.sport')),
                ('temp_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='sport',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='panel.sport'),
        ),
        migrations.AddField(
            model_name='match',
            name='team_1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_1', to='panel.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='team_2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_2', to='panel.team'),
        ),
    ]
